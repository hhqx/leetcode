/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *lout = new ListNode;
        ListNode *pout = lout, *p1 = l1, *p2 = l2;
        int sum = (p1->val + p2->val), carry = sum / 10;
        pout->val = sum % 10;
        p1 = p1->next; p2 = p2->next;
        
        while (p1 != NULL && p2 != NULL) {
            sum = p1->val + p2->val + carry;
            carry = sum / 10;
            pout->next = new ListNode(sum % 10);
            p1 = p1->next; p2 = p2->next; pout = pout->next;
        }
        
        if (p1 == NULL) {
            while(p2 != NULL) {
                sum = p2->val + carry;
                carry = sum / 10;
                pout->next = new ListNode(sum % 10);
                p2 = p2->next; pout = pout->next;
            }  
        } else if (p2== NULL) {
            while (p1 != NULL) {
                sum = p1->val + carry;
                carry = sum / 10;
                pout->next = new ListNode(sum % 10);
                p1 = p1->next; pout = pout->next;
            }   
        }
        
        if (carry > 0) {
            pout->next = new ListNode(carry);
        }
        
        return lout;
    }
};
//runtime:20 ms
//memory:71.4 MB
