class Solution:
    def minimumTotal(self, triangle: List[List[int]]) -> int:
        
        L = len(triangle)
        for i in range(L - 2, -1, -1):
            now, prev = triangle[i + 1], triangle[i]
            for j in range(0, i + 1):
                prev[j] += min(now[j], now[j + 1])
        
        # if L == 1:
        #     return triangle[0][0]
        
        # for i in range(L - 2, -1, -1):
        #     now, prev = triangle[i + 1], triangle[i]
        #     for j in range(0, i + 1):
        #         print(i, j, triangle[i][j])
        #         triangle[i][j] += min(triangle[i + 1][j], triangle[i + 1][j + 1])
            
        
        return triangle[0][0]
# runtime:116 ms
# memory:14.9 MB
